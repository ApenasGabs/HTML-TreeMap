name: Release and Publish

on:
  push:
    branches: [main]
    paths:
      - "package.json" # Aciona apenas quando package.json é alterado

jobs:
  check-version:
    name: Check Version Change
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      has_changed: ${{ steps.check_version.outputs.has_changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necessário para acessar commits anteriores

      - name: Extract version from package.json
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Versão atual: $VERSION"

      - name: Check if version has changed
        id: check_version
        run: |
          # Verifica se o arquivo package.json mudou no último commit
          git diff --name-only HEAD^ HEAD | grep -q 'package.json' && \
            # Verifica se a versão mudou (compara com a versão anterior)
            PREV_VERSION=$(git show HEAD^:package.json | node -p "JSON.parse(require('fs').readFileSync(0)).version" 2>/dev/null) && \
            CURRENT_VERSION=$(node -p "require('./package.json').version") && \
            if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
              echo "Versão alterada: $PREV_VERSION -> $CURRENT_VERSION"
              echo "has_changed=true" >> $GITHUB_OUTPUT
            else
              echo "Versão não alterada: $CURRENT_VERSION"
              echo "has_changed=false" >> $GITHUB_OUTPUT
            fi || echo "has_changed=false" >> $GITHUB_OUTPUT

  release-publish:
    name: Create Release, Tag and Publish to NPM
    needs: check-version
    if: needs.check-version.outputs.has_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build:lib

      - name: Create GitHub Release and Tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          release_name: v${{ needs.check-version.outputs.version }}
          draft: false
          prerelease: false

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Comment on commit
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            :rocket: Publicado com sucesso na versão v${{ needs.check-version.outputs.version }}

            - :package: Pacote publicado no NPM: https://www.npmjs.com/package/html-tree-view/v/${{ needs.check-version.outputs.version }}
            - :bookmark: Tag criada no GitHub: v${{ needs.check-version.outputs.version }}
